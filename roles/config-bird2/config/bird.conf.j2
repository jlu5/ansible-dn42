log "/var/log/bird/bird.log" 10485760 "/var/log/bird/bird.log.1" { info, remote, warning, error, auth, fatal, bug, debug, trace };
#debug protocols { routes, events };
define OWNAS = {{ ownas }};
define OWNIP = {{ ownip }};
define OWNIPv6 = {{ ownip6 }};

define DN42_REGION = {{ dn42_regions[0] }};

hostname "{{ inventory_hostname }}";

protocol static {
{% if export_ownnets|default(True) %}
{% for prefix in ownnets4 %}
    route {{ prefix }} reject;
{% endfor %}
{% endif %}
{% for route in static_routes4|default([]) %}
    route {{ route }};
{% endfor %}

    ipv4 {
        import all;
        export none;
    };
}

protocol static {
{% if export_ownnets|default(True) %}
{% for prefix in ownnets6 %}
    route {{ prefix }} reject;
{% endfor %}
{% endif %}
{% for route in static_routes6|default([]) %}
    route {{ route }};
{% endfor %}

    ipv6 {
        import all;
        export none;
    };
}

router id OWNIP;

protocol device {
    scan time 10;
}

function is_self_net() {
  return net ~ [
    {{ownnets4_ipset}}
  ];
}

function is_self_net_v6() {
  return net ~ [
    {{ownnets6_ipset}}
  ];
}

function is_valid_network() {
  return net ~ [
    172.20.0.0/14{21,29}, # dn42
    172.20.0.0/24{28,32}, # dn42 Anycast
    172.21.0.0/24{28,32}, # dn42 Anycast
    172.22.0.0/24{28,32}, # dn42 Anycast
    172.23.0.0/24{28,32}, # dn42 Anycast
    172.31.0.0/16+,       # ChaosVPN
    10.100.0.0/14+,       # ChaosVPN
    10.0.0.0/8{15,24},    # Freifunk.net
    10.127.0.0/16+        # NeoNetwork
  ];
}

roa4 table dn42_roa;
roa6 table dn42_roa_v6;

{% if 'dn42routers' in group_names or import_roa|default(False) %}
protocol static {
    roa4 { table dn42_roa; };
    include "/etc/bird/roa_dn42.conf";
};

protocol static {
    roa6 { table dn42_roa_v6; };
    include "/etc/bird/roa_dn42_v6.conf";
};
{% else %}
# Skipping ROA table enumeration for non-eBGP routers
{% endif %}

function is_valid_network_v6() {
  return net ~ [
    fd00::/8{44,64}, # ULA address space as per RFC 4193
    fd10:127::/32+   # NeoNetwork
  ];
}

protocol kernel {
    scan time 20;

    ipv6 {
        import none;
        export filter {
            if source = RTS_DEVICE then {
              reject;
            }
            krt_prefsrc = OWNIPv6;
            accept;
        };
    };
};

protocol kernel {
    scan time 20;

    ipv4 {
        import none;
        export filter {
            if source = RTS_DEVICE then {
              reject;
            }
            krt_prefsrc = OWNIP;
            accept;
        };
    };
}

include "/etc/bird/custom_filters.conf";
include "/etc/bird/community_filters.conf";

template bgp dnpeers {
    local as OWNAS;
    # When eBGP routes tie in latency, prefer older routes instead of comparing router ID
    prefer older on;

    enable extended messages;

    enforce first as on;
    advertise hostname on;
}

include "/etc/bird/babel.conf";
include "/etc/bird/ibgp.conf";
include "/etc/bird/local*.conf";
